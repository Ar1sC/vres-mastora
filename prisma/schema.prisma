// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  role          UserRole  @default(CUSTOMER)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  
  // Relations
  professional  Professional?
  bookings     Booking[]
  reviews      Review[]
}

model Professional {
  id           String   @id @default(cuid())
  userId       String   @unique
  businessName String
  description  String?
  address      String?
  city         String?
  country      String?
  phone        String?
  
  // Relations
  user         User      @relation(fields: [userId], references: [id])
  services     Service[]
  bookings     Booking[]
  reviews      Review[]
}

model Service {
  id            String   @id @default(cuid())
  name          String
  description   String?
  price         Decimal
  duration      Int      // in minutes
  professionalId String
  
  // Relations
  professional  Professional @relation(fields: [professionalId], references: [id])
  bookings     Booking[]
}

model Booking {
  id             String        @id @default(cuid())
  userId         String
  professionalId String
  serviceId      String
  status         BookingStatus @default(PENDING)
  scheduledFor   DateTime
  createdAt      DateTime      @default(now())
  
  // Relations
  user          User         @relation(fields: [userId], references: [id])
  professional  Professional @relation(fields: [professionalId], references: [id])
  service       Service      @relation(fields: [serviceId], references: [id])
}

model Review {
  id             String   @id @default(cuid())
  rating         Int
  comment        String?
  userId         String
  professionalId String
  createdAt      DateTime @default(now())
  
  // Relations
  user          User         @relation(fields: [userId], references: [id])
  professional  Professional @relation(fields: [professionalId], references: [id])
}

enum UserRole {
  CUSTOMER
  PROFESSIONAL
  ADMIN
}

enum BookingStatus {
  PENDING
  CONFIRMED
  COMPLETED
  CANCELLED
}
